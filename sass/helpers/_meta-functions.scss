// ==========================================================================
// META-FUNCTIONS (functions and placeholders used within the helpers folder)
// ==========================================================================//

// ================ em() AND rem() =====================//
@function strip-units($num) {
	@return $num / ($num * 0 + 1);
}

// =================== absolute() & fixed() =======================//

@mixin position($position, $args) {
	@each $o in top right bottom left {
		$i: index($args, $o);

		@if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number  {
			#{$o}: nth($args, $i + 1);
		}
	}

	position: $position;
}

// ================== font-face(name, url) ======================//

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

// =================== for hover() =======================//

%color-transition {
    transition: color 150ms linear, background-color 150ms linear;
}